openapi: 3.0.0
info:
  title: LifeStyle App API
  description: A simple API to authenticate user and access LifeStyle app info
  contact:
    name: Chung Kao
    email: chungckao@gmail.com
  version: "1.0"
servers:
  - url: http://localhost:3001/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: Username and password
        content:
          application/json:
            schema:
              $ref: ""
            example:
              username: Chung Kao
              password: San#3Dragons?
        required: true
      responses:
        "201":
          description: User created
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: Username and password
        content:
          application/json:
            schema:
              $ref: ""
            example:
              username: Chung Kao
              password: San#3Dragons?
        required: true
      responses:
        "200":
          description: User logged in
          headers: {}
      deprecated: false
      security: []
  /auth/deactivate:
    post:
      tags:
        - Auth
      summary: Deactivate User
      operationId: DeactivateUser
      parameters: []
      requestBody:
        description: Username and password
        content:
          application/json:
            schema:
              $ref: ""
            example:
              username: Chung Kao
              password: San#3Dragons?
        required: true
      responses:
        "200":
          description: User deactivated
          headers: {}
      deprecated: false
      security: []
  /lists:
    post:
      tags:
        - ToDoLists
      summary: Create List
      operationId: CreateList
      parameters: []
      requestBody:
        description: A title is required
        content:
          application/json:
            schema:
              $ref: ""
            example:
              title: Prep for Job Interview
        required: true
      responses:
        "201":
          description: To do list created
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - ToDoLists
      summary: Get All Lists
      operationId: GetAllLists
      parameters: []
      responses:
        "200":
          description: Fetched all to do lists
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /lists/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The to do list ID
    get:
      tags:
        - ToDoLists
      summary: Get Single List
      operationId: GetSingleList
      parameters:
        - name: id
          in: path
          description: The to do list ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Fetched to do list
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - ToDoLists
      summary: Update List
      operationId: UpdateList
      parameters:
        - name: id
          in: path
          description: The to do list ID
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: A title is required
        content:
          application/json:
            schema:
              $ref: ""
            example:
              title: Prepare for Job Interview
        required: true
      responses:
        "200":
          description: Updated to do list
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - ToDoLists
      summary: Delete List
      operationId: DeleteList
      parameters:
        - name: id
          in: path
          description: The to do list ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Deleted to do list
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /todos:
    post:
      tags:
        - ToDos
      summary: Create ToDo
      operationId: CreateToDo
      parameters: []
      requestBody:
        description: Title and list (ID) is required
        content:
          application/json:
            schema:
              $ref: ""
            example:
              list: 6353ff31a9265ef454a027f6
              title: Study data structure and algorithm and understand Big O theory and time and memory complexity
        required: true
      responses:
        "200":
          description: To do item created
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - ToDos
      summary: Get All ToDos
      operationId: GetAllToDos
      parameters: []
      responses:
        "200":
          description: Fetched all to do items
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /todos/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The to do ID
    get:
      tags:
        - ToDos
      summary: Get Single ToDo
      operationId: GetSingleToDo
      parameters:
        - name: id
          in: path
          description: The to do ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Fetched to do
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - ToDos
      summary: Update ToDo
      operationId: UpdateToDo
      parameters:
        - name: id
          in: path
          description: The to do ID
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: A title is required
        content:
          application/json:
            schema:
              $ref: ""
            example:
              title: Study data structure and algorithm and understand Big O theory and time complexity and call stack
        required: true
      responses:
        "200":
          description: Updated to do item
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - ToDos
      summary: Delete ToDo
      operationId: DeleteToDo
      parameters:
        - name: id
          in: path
          description: The to do ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Deleted to do item
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: User registration and login
  - name: ToDoLists
    description: CRUD operations on to do lists
  - name: ToDos
    description: CRUD operations on to do items
